C51 COMPILER V9.54   SPI                                                                   09/23/2018 00:10:23 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE SPI
OBJECT MODULE PLACED IN .\spi.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\HARDWARE\spi\spi.c LARGE OPTIMIZE(8,SPEED) BROWSE NOINTVECTOR INCDIR(
                    -..\delay;..\tft;..\GUI;..\HARDWARE\xpt2046;..\HARDWARE\spi;C:\Keil_v5\C51\INC\STC) DEBUG OBJECTEXTEND PRINT(.\spi.lst) T
                    -ABS(2) OBJECT(.\spi.obj)

line level    source

   1          
   2          #include "stc15f2k60s2.h"
   3          #include  "spi.h"
   4          
   5          
   6          //SPI初始化
   7          //主要将SPI总线 从默认P1口上调制P4口  
   8          //然后初始化SPI总线
   9          void Init_SPI()        
  10          {
  11   1      
  12   1      SPDAT = 0;
  13   1      SPSTAT=0xc0;             //SPDAT.7和SPDAT.6写11，可以将中断标志清零。注意是写1才清零
  14   1      SPCTL = 0xd0;            //  SSIG 1 开启主机模式 SPEN 1 SPI使能  DORD 0 先发最高位   MSTR 1 主机模式
  15   1                               //  CPOL 0  SPICLK空闲时为低  CPHA  0 数据在SPICLK的前时钟沿驱动  时钟CPU_CLK/4 
  16   1      }
  17          
  18          
  19          //SPI为全双工通讯  所以在发送的同时可以接收到数据
  20          
  21          u8 SPI_SendByte(u8 SPI_SendData)
  22          
  23          {
  24   1      
  25   1      SPDAT= SPI_SendData;     // 将数据 写入 
  26   1          
  27   1      while((SPSTAT&0x80)==0); //等待写入完成
  28   1      
  29   1      SPSTAT = 0xc0;           //清除中断标志，和写冲突标志，注意是对应位写1才能清零
  30   1                   
  31   1      return  SPDAT;           //返回得到的数据
  32   1        
  33   1      }
  34          
  35          
  36          
  37           //SPI时钟速率设置
  38          void SPI_Speed(u8 speed)
  39          {
  40   1      
  41   1          switch(speed)         //每一次降速 都要先清为最高 在进行降速
  42   1          {
  43   2              case 0: SPCTL&=0xFC;break;                //SysClk/4,SPR1=0,SPR0=0 
  44   2              case 1: SPCTL&=0xFC; SPCTL|=0x01;break;   //SysClk/16,SPR1=0,SPRO=1
  45   2              case 2: SPCTL&=0xFC; SPCTL|=0x02;break;   //SysClk/64,SPR1=1,SPR0=0
  46   2              case 3: SPCTL&=0xFC; SPCTL|=0x03;break;   //SysClk/128,SPR1=1,SPR0=1
  47   2          }
  48   1          
  49   1      }
  50          
  51          
  52          
  53          
C51 COMPILER V9.54   SPI                                                                   09/23/2018 00:10:23 PAGE 2   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     62    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
