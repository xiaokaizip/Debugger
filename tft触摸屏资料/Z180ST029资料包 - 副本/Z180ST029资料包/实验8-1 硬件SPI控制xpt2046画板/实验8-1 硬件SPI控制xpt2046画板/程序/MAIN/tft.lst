C51 COMPILER V9.54   TFT                                                                   09/23/2018 00:10:22 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE TFT
OBJECT MODULE PLACED IN .\tft.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\tft\tft.C LARGE OPTIMIZE(8,SPEED) BROWSE NOINTVECTOR INCDIR(..\delay;
                    -..\tft;..\GUI;..\HARDWARE\xpt2046;..\HARDWARE\spi;C:\Keil_v5\C51\INC\STC) DEBUG OBJECTEXTEND PRINT(.\tft.lst) TABS(2) OB
                    -JECT(.\tft.obj)

line level    source

   1          #include "stc15f2k60s2.h"
   2          #include "tft.h"
   3          #include "delay.h"
   4          #include "def.h"
   5          
   6          
   7          //发送命令
   8          void  Lcd_WR_Reg(u16 c)
   9          {
  10   1           int i;
  11   1           A0=0;
  12   1           CSB=0;
  13   1           for(i=0;i<8;i++)
  14   1           {
  15   2           if(c &0x80)
  16   2           {
  17   3           SDA=1;
  18   3           }
  19   2           else SDA=0;
  20   2           SCL=0;
  21   2           SCL=1;
  22   2           c <<=1;
  23   2           }
  24   1         
  25   1           CSB=1; 
  26   1      }
  27          
  28          void LCD_WriteData(u16 dat)
  29          {
  30   1            int i;
  31   1            A0=1;
  32   1            CSB=0;
  33   1            for(i=0;i<8;i++)
  34   1            {
  35   2            if(dat&0x80)
  36   2            {
  37   3            SDA=1;
  38   3            }
  39   2            else SDA=0;
  40   2            SCL=0;
  41   2            SCL=1;
  42   2            dat<<=1;
  43   2            }  
  44   1            CSB=1;
  45   1      }
  46          //发送数据
  47          void Lcd_Write_Data(u16 dat16)
  48          {
  49   1        LCD_WriteData(dat16>>8);
  50   1        LCD_WriteData(dat16);
  51   1      }
  52          
  53          //设置坐标范围    
C51 COMPILER V9.54   TFT                                                                   09/23/2018 00:10:22 PAGE 2   

  54          //x1 y1  初始位置
  55          //x2 y2  结束位置
  56          void Address_set(u16 x1,u16 y1,u16 x2,u16 y2)
  57          {      
  58   1            //  xq=0;yq=0;
  59   1          Lcd_WR_Reg(0X2A); 
  60   1          LCD_WriteData(x1>>8); 
  61   1          LCD_WriteData(x1&0XFF);
  62   1          LCD_WriteData(x2>>8); 
  63   1          LCD_WriteData(x2&0XFF);
  64   1      
  65   1          Lcd_WR_Reg(0X2B); 
  66   1          LCD_WriteData(y1>>8); 
  67   1          LCD_WriteData(y1&0XFF);
  68   1          LCD_WriteData(y2>>8); 
  69   1          LCD_WriteData(y2&0XFF);
  70   1          Lcd_WR_Reg(0X2C);      //开始写入GRAM
  71   1       
  72   1      }
  73          
  74          /*
  75          9341扫描特点 如果扫描方向改变后 会直接改变x y起始原点
  76          所以在横屏显示的时候 就不用考虑 x y的变化后的结果 因为原点也发生改变
  77          就是可以一种代码通用
  78          
  79          */
  80          
  81          //tft屏设置扫描方式函数
  82          //mode 1 -8  一共8种扫描方式
  83          //     1   左>右  上>下 
  84          //     2   左>右  下>上
  85          //     3   右>左  上>下
  86          //     4   右>左  下>上 
  87          //     5   上>下  左>右  
  88          //     6   上>下  右>左 
  89          //     7   下>上  左>右 
  90          //     8   下>上  右>左 
  91          void LCD_scan(u8 mode)
  92          {
  93   1       switch(mode)
  94   1       {
  95   2         case 1:
  96   2        Lcd_WR_Reg(0x36);    // Memory Access Control      saomiao
  97   2        LCD_WriteData(0x08);  
  98   2          Lcd_WR_Reg(0X2C);      //开始写入GRAM      
  99   2        break;
 100   2         case 2:
 101   2        Lcd_WR_Reg(0x36);    // Memory Access Control      saomiao
 102   2        LCD_WriteData(0x88); 
 103   2        Lcd_WR_Reg(0X2C);      //开始写入GRAM          
 104   2        break;
 105   2         case 3:
 106   2        Lcd_WR_Reg(0x36);    // Memory Access Control      saomiao
 107   2        LCD_WriteData(0x48);  
 108   2        Lcd_WR_Reg(0X2C);      //开始写入GRAM       
 109   2        break;
 110   2         case 4:
 111   2        Lcd_WR_Reg(0x36);    // Memory Access Control      saomiao
 112   2        LCD_WriteData(0xc8);  
 113   2        Lcd_WR_Reg(0X2C);      //开始写入GRAM        
 114   2        break;
 115   2         case 5:
C51 COMPILER V9.54   TFT                                                                   09/23/2018 00:10:22 PAGE 3   

 116   2        Lcd_WR_Reg(0x36);    // Memory Access Control      saomiao
 117   2        LCD_WriteData(0x28); 
 118   2        Lcd_WR_Reg(0X2C);      //开始写入GRAM          
 119   2        break;
 120   2         case 6:
 121   2        Lcd_WR_Reg(0x36);    // Memory Access Control      saomiao
 122   2        LCD_WriteData(0x68);  
 123   2        Lcd_WR_Reg(0X2C);      //开始写入GRAM        
 124   2        break;
 125   2         case 7:
 126   2        Lcd_WR_Reg(0x36);    // Memory Access Control      saomiao
 127   2        LCD_WriteData(0xa8);  
 128   2        Lcd_WR_Reg(0X2C);      //开始写入GRAM        
 129   2        break;
 130   2         case 8:
 131   2        Lcd_WR_Reg(0x36);    // Memory Access Control      saomiao
 132   2        LCD_WriteData(0xe8); 
 133   2        Lcd_WR_Reg(0X2C);      //开始写入GRAM          
 134   2        break;
 135   2       }
 136   1      }
 137          
 138          
 139          
 140          
 141          //液晶初始化
 142          void Lcd_Init(void)
 143          {
 144   1      
 145   1            
 146   1            //------------------------------------ST7735R Reset Sequence-----------------------------------------//
             - 
 147   1      RES =1; 
 148   1      delay1ms (1);                                                              //Delay 1ms 
 149   1      RES =0; 
 150   1      delay1ms (1);                                                              //Delay 1ms 
 151   1      RES =1; 
 152   1      delay1ms (120);                                                              //Delay 120ms 
 153   1      //--------------------------------End ST7735R Reset Sequence --------------------------------------// 
 154   1       
 155   1      //--------------------------------End ST7735S Reset Sequence --------------------------------------// 
 156   1      Lcd_WR_Reg(0x11); //Sleep out 
 157   1      delay1ms(120);              //Delay 120ms 
 158   1      //------------------------------------ST7735S Frame Rate-----------------------------------------// 
 159   1      Lcd_WR_Reg(0xB1); 
 160   1      LCD_WriteData(0x05); 
 161   1      LCD_WriteData(0x3C); 
 162   1      LCD_WriteData(0x3C); 
 163   1      Lcd_WR_Reg(0xB2); 
 164   1      LCD_WriteData(0x05); 
 165   1      LCD_WriteData(0x3C); 
 166   1      LCD_WriteData(0x3C); 
 167   1      Lcd_WR_Reg(0xB3); 
 168   1      LCD_WriteData(0x05); 
 169   1      LCD_WriteData(0x3C); 
 170   1      LCD_WriteData(0x3C); 
 171   1      LCD_WriteData(0x05); 
 172   1      LCD_WriteData(0x3C); 
 173   1      LCD_WriteData(0x3C); 
 174   1      //------------------------------------End ST7735S Frame Rate---------------------------------// 
 175   1      Lcd_WR_Reg(0xB4); //Dot inversion 
 176   1      LCD_WriteData(0x03); 
C51 COMPILER V9.54   TFT                                                                   09/23/2018 00:10:22 PAGE 4   

 177   1      //------------------------------------ST7735S Power Sequence---------------------------------// 
 178   1      Lcd_WR_Reg(0xC0); 
 179   1      LCD_WriteData(0x28); 
 180   1      LCD_WriteData(0x08); 
 181   1      LCD_WriteData(0x04); 
 182   1      Lcd_WR_Reg(0xC1); 
 183   1      LCD_WriteData(0XC0); 
 184   1      Lcd_WR_Reg(0xC2); 
 185   1      LCD_WriteData(0x0D); 
 186   1      LCD_WriteData(0x00); 
 187   1      Lcd_WR_Reg(0xC3); 
 188   1      LCD_WriteData(0x8D); 
 189   1      LCD_WriteData(0x2A); 
 190   1      Lcd_WR_Reg(0xC4); 
 191   1      LCD_WriteData(0x8D); 
 192   1      LCD_WriteData(0xEE); 
 193   1      //---------------------------------End ST7735S Power Sequence-------------------------------------// 
 194   1      Lcd_WR_Reg(0xC5); //VCOM 
 195   1      LCD_WriteData(0x1A); 
 196   1      Lcd_WR_Reg(0x36); //MX, MY, RGB mode 
 197   1      LCD_WriteData(0xC0); 
 198   1      //------------------------------------ST7735S Gamma Sequence---------------------------------// 
 199   1      Lcd_WR_Reg(0xE0); 
 200   1      LCD_WriteData(0x04); 
 201   1      LCD_WriteData(0x22); 
 202   1      LCD_WriteData(0x07); 
 203   1      LCD_WriteData(0x0A); 
 204   1      LCD_WriteData(0x2E); 
 205   1      LCD_WriteData(0x30); 
 206   1      LCD_WriteData(0x25); 
 207   1      LCD_WriteData(0x2A); 
 208   1      LCD_WriteData(0x28); 
 209   1      LCD_WriteData(0x26); 
 210   1      LCD_WriteData(0x2E); 
 211   1      LCD_WriteData(0x3A); 
 212   1      LCD_WriteData(0x00); 
 213   1      LCD_WriteData(0x01); 
 214   1      LCD_WriteData(0x03); 
 215   1      LCD_WriteData(0x13); 
 216   1      Lcd_WR_Reg(0xE1); 
 217   1      LCD_WriteData(0x04); 
 218   1      LCD_WriteData(0x16); 
 219   1      LCD_WriteData(0x06); 
 220   1      LCD_WriteData(0x0D); 
 221   1      LCD_WriteData(0x2D); 
 222   1      LCD_WriteData(0x26); 
 223   1      LCD_WriteData(0x23); 
 224   1      LCD_WriteData(0x27); 
 225   1      LCD_WriteData(0x27); 
 226   1      LCD_WriteData(0x25); 
 227   1      LCD_WriteData(0x2D); 
 228   1      LCD_WriteData(0x3B); 
 229   1      LCD_WriteData(0x00); 
 230   1      LCD_WriteData(0x01); 
 231   1      LCD_WriteData(0x04); 
 232   1      LCD_WriteData(0x13); 
 233   1      //------------------------------------End ST7735S Gamma Sequence-----------------------------// 
 234   1      Lcd_WR_Reg(0x3A); //65k mode 
 235   1      LCD_WriteData(0x05); 
 236   1      Lcd_WR_Reg(0x29); //Display on 
 237   1      
 238   1      
C51 COMPILER V9.54   TFT                                                                   09/23/2018 00:10:22 PAGE 5   

 239   1      }    
 240          
 241          
 242          
 243          
 244          
 245          
 246          
 247          
 248          
 249          
 250          
 251          
 252          
 253          
 254          
 255          
 256          
 257          
 258          
 259          
 260          
 261          
 262          
 263          
 264          
 265          
 266          
 267          
 268          
 269          
 270          
 271          
 272          
 273          
 274          
 275          
 276          
 277          
 278          
 279          
 280          
 281          
 282          
 283          
 284          
 285          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    800    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
